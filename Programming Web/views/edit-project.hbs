<link rel="stylesheet" href="public/styles/addproject.css">
<main class="content">
    <div class="content__body">
        <div class="content__ask">
            <div class="content-ask__header">Please read the <a href="/rules">rules</a> before saving a
                project!</div>
            <form class="content-ask__form form" onsubmit="addProject()">
                <ul class="form__field-list">
                    <li>
                        <label>
                            <input type="text" class="form__input-text" name="Git Repository Link"
                                   placeholder="Git Repository Link" required id="git"/>
                        </label>
                    </li>
                    <li>
                        <label>
                            <input type="text" class="form__input-text" name="Description" placeholder="Description"
                                   required id="description"/>
                        </label>
                    </li>
                    <li>
                        <label for="project-picture" class="form__label">Project Picture:</label>
                        <input type="file" id="project-picture" name="Project Picture" accept="image/*" />
                    </li>
                </ul>
            </form>
            <button class="content-ask__button" onclick="saveProject()">Save</button>
        </div>
    </div>
</main>
<script>
    const toBase64 = file => new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = reject;
    });

    async function saveProject() {
        const git = document.getElementById("git").value;
        const description = document.getElementById("description").value;
        const image = document.getElementById("project-picture").value;
        let imageBase64 = null
        if (image) {
            const file = document.getElementById('project-picture').files[0];
            imageBase64 = await toBase64(file)
        }

        const params = new Proxy(new URLSearchParams(window.location.search), {
            get: (searchParams, prop) => searchParams.get(prop),
        });

        const projectId = Number(params.id);
        axios.patch(`/projects`, {
            "id": projectId,
            "description": description,
            "pictureData": imageBase64,
            "repositoryLink": git,
        }).then((r) => {
            window.location = `/project?id=${r.data.id}`;
        })
    }
</script>